// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceCreateInstallPlanRequest service create install plan request
//
// swagger:model service.CreateInstallPlanRequest
type ServiceCreateInstallPlanRequest struct {

	// owner id
	// Required: true
	OwnerID *string `json:"owner_id"`

	// owner type
	// Required: true
	OwnerType *string `json:"owner_type"`

	// plan json
	// Required: true
	PlanJSON *string `json:"plan_json"`
}

// Validate validates this service create install plan request
func (m *ServiceCreateInstallPlanRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOwnerID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwnerType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlanJSON(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceCreateInstallPlanRequest) validateOwnerID(formats strfmt.Registry) error {

	if err := validate.Required("owner_id", "body", m.OwnerID); err != nil {
		return err
	}

	return nil
}

func (m *ServiceCreateInstallPlanRequest) validateOwnerType(formats strfmt.Registry) error {

	if err := validate.Required("owner_type", "body", m.OwnerType); err != nil {
		return err
	}

	return nil
}

func (m *ServiceCreateInstallPlanRequest) validatePlanJSON(formats strfmt.Registry) error {

	if err := validate.Required("plan_json", "body", m.PlanJSON); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this service create install plan request based on context it is used
func (m *ServiceCreateInstallPlanRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceCreateInstallPlanRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceCreateInstallPlanRequest) UnmarshalBinary(b []byte) error {
	var res ServiceCreateInstallPlanRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
