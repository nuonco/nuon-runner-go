// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OtelAttribute otel attribute
//
// swagger:model otel.Attribute
type OtelAttribute struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value *OtelAttributeValue `json:"value,omitempty"`
}

// Validate validates this otel attribute
func (m *OtelAttribute) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttribute) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	if m.Value != nil {
		if err := m.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this otel attribute based on the context it is used
func (m *OtelAttribute) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttribute) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if m.Value != nil {

		if swag.IsZero(m.Value) { // not required
			return nil
		}

		if err := m.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OtelAttribute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelAttribute) UnmarshalBinary(b []byte) error {
	var res OtelAttribute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OtelAttributeValue otel attribute value
//
// swagger:model OtelAttributeValue
type OtelAttributeValue struct {

	// kvlist value
	KvlistValue *OtelAttributeValueKvlistValue `json:"kvlistValue,omitempty"`
}

// Validate validates this otel attribute value
func (m *OtelAttributeValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKvlistValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValue) validateKvlistValue(formats strfmt.Registry) error {
	if swag.IsZero(m.KvlistValue) { // not required
		return nil
	}

	if m.KvlistValue != nil {
		if err := m.KvlistValue.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value" + "." + "kvlistValue")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value" + "." + "kvlistValue")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this otel attribute value based on the context it is used
func (m *OtelAttributeValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateKvlistValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValue) contextValidateKvlistValue(ctx context.Context, formats strfmt.Registry) error {

	if m.KvlistValue != nil {

		if swag.IsZero(m.KvlistValue) { // not required
			return nil
		}

		if err := m.KvlistValue.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value" + "." + "kvlistValue")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value" + "." + "kvlistValue")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OtelAttributeValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelAttributeValue) UnmarshalBinary(b []byte) error {
	var res OtelAttributeValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OtelAttributeValueKvlistValue otel attribute value kvlist value
//
// swagger:model OtelAttributeValueKvlistValue
type OtelAttributeValueKvlistValue struct {

	// values
	Values []*OtelAttributeValueKvlistValueValuesItems0 `json:"values"`
}

// Validate validates this otel attribute value kvlist value
func (m *OtelAttributeValueKvlistValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValueKvlistValue) validateValues(formats strfmt.Registry) error {
	if swag.IsZero(m.Values) { // not required
		return nil
	}

	for i := 0; i < len(m.Values); i++ {
		if swag.IsZero(m.Values[i]) { // not required
			continue
		}

		if m.Values[i] != nil {
			if err := m.Values[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("value" + "." + "kvlistValue" + "." + "values" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("value" + "." + "kvlistValue" + "." + "values" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this otel attribute value kvlist value based on the context it is used
func (m *OtelAttributeValueKvlistValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateValues(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValueKvlistValue) contextValidateValues(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Values); i++ {

		if m.Values[i] != nil {

			if swag.IsZero(m.Values[i]) { // not required
				return nil
			}

			if err := m.Values[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("value" + "." + "kvlistValue" + "." + "values" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("value" + "." + "kvlistValue" + "." + "values" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValue) UnmarshalBinary(b []byte) error {
	var res OtelAttributeValueKvlistValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OtelAttributeValueKvlistValueValuesItems0 otel attribute value kvlist value values items0
//
// swagger:model OtelAttributeValueKvlistValueValuesItems0
type OtelAttributeValueKvlistValueValuesItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value *OtelAttributeValueKvlistValueValuesItems0Value `json:"value,omitempty"`
}

// Validate validates this otel attribute value kvlist value values items0
func (m *OtelAttributeValueKvlistValueValuesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValueKvlistValueValuesItems0) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	if m.Value != nil {
		if err := m.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this otel attribute value kvlist value values items0 based on the context it is used
func (m *OtelAttributeValueKvlistValueValuesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OtelAttributeValueKvlistValueValuesItems0) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if m.Value != nil {

		if swag.IsZero(m.Value) { // not required
			return nil
		}

		if err := m.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValueValuesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValueValuesItems0) UnmarshalBinary(b []byte) error {
	var res OtelAttributeValueKvlistValueValuesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// OtelAttributeValueKvlistValueValuesItems0Value otel attribute value kvlist value values items0 value
//
// swagger:model OtelAttributeValueKvlistValueValuesItems0Value
type OtelAttributeValueKvlistValueValuesItems0Value struct {

	// string value
	StringValue string `json:"stringValue,omitempty"`
}

// Validate validates this otel attribute value kvlist value values items0 value
func (m *OtelAttributeValueKvlistValueValuesItems0Value) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this otel attribute value kvlist value values items0 value based on context it is used
func (m *OtelAttributeValueKvlistValueValuesItems0Value) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValueValuesItems0Value) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OtelAttributeValueKvlistValueValuesItems0Value) UnmarshalBinary(b []byte) error {
	var res OtelAttributeValueKvlistValueValuesItems0Value
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
