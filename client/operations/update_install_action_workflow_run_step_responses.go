// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// UpdateInstallActionWorkflowRunStepReader is a Reader for the UpdateInstallActionWorkflowRunStep structure.
type UpdateInstallActionWorkflowRunStepReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateInstallActionWorkflowRunStepReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateInstallActionWorkflowRunStepOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateInstallActionWorkflowRunStepBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateInstallActionWorkflowRunStepUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateInstallActionWorkflowRunStepForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateInstallActionWorkflowRunStepNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateInstallActionWorkflowRunStepInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}] UpdateInstallActionWorkflowRunStep", response, response.Code())
	}
}

// NewUpdateInstallActionWorkflowRunStepOK creates a UpdateInstallActionWorkflowRunStepOK with default headers values
func NewUpdateInstallActionWorkflowRunStepOK() *UpdateInstallActionWorkflowRunStepOK {
	return &UpdateInstallActionWorkflowRunStepOK{}
}

/*
UpdateInstallActionWorkflowRunStepOK describes a response with status code 200, with default header values.

OK
*/
type UpdateInstallActionWorkflowRunStepOK struct {
	Payload *models.AppInstallActionWorkflowRunStep
}

// IsSuccess returns true when this update install action workflow run step o k response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update install action workflow run step o k response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step o k response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update install action workflow run step o k response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update install action workflow run step o k response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update install action workflow run step o k response
func (o *UpdateInstallActionWorkflowRunStepOK) Code() int {
	return 200
}

func (o *UpdateInstallActionWorkflowRunStepOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepOK %s", 200, payload)
}

func (o *UpdateInstallActionWorkflowRunStepOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepOK %s", 200, payload)
}

func (o *UpdateInstallActionWorkflowRunStepOK) GetPayload() *models.AppInstallActionWorkflowRunStep {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppInstallActionWorkflowRunStep)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstallActionWorkflowRunStepBadRequest creates a UpdateInstallActionWorkflowRunStepBadRequest with default headers values
func NewUpdateInstallActionWorkflowRunStepBadRequest() *UpdateInstallActionWorkflowRunStepBadRequest {
	return &UpdateInstallActionWorkflowRunStepBadRequest{}
}

/*
UpdateInstallActionWorkflowRunStepBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateInstallActionWorkflowRunStepBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update install action workflow run step bad request response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update install action workflow run step bad request response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step bad request response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update install action workflow run step bad request response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update install action workflow run step bad request response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update install action workflow run step bad request response
func (o *UpdateInstallActionWorkflowRunStepBadRequest) Code() int {
	return 400
}

func (o *UpdateInstallActionWorkflowRunStepBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepBadRequest %s", 400, payload)
}

func (o *UpdateInstallActionWorkflowRunStepBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepBadRequest %s", 400, payload)
}

func (o *UpdateInstallActionWorkflowRunStepBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstallActionWorkflowRunStepUnauthorized creates a UpdateInstallActionWorkflowRunStepUnauthorized with default headers values
func NewUpdateInstallActionWorkflowRunStepUnauthorized() *UpdateInstallActionWorkflowRunStepUnauthorized {
	return &UpdateInstallActionWorkflowRunStepUnauthorized{}
}

/*
UpdateInstallActionWorkflowRunStepUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateInstallActionWorkflowRunStepUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update install action workflow run step unauthorized response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update install action workflow run step unauthorized response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step unauthorized response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update install action workflow run step unauthorized response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update install action workflow run step unauthorized response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update install action workflow run step unauthorized response
func (o *UpdateInstallActionWorkflowRunStepUnauthorized) Code() int {
	return 401
}

func (o *UpdateInstallActionWorkflowRunStepUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepUnauthorized %s", 401, payload)
}

func (o *UpdateInstallActionWorkflowRunStepUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepUnauthorized %s", 401, payload)
}

func (o *UpdateInstallActionWorkflowRunStepUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstallActionWorkflowRunStepForbidden creates a UpdateInstallActionWorkflowRunStepForbidden with default headers values
func NewUpdateInstallActionWorkflowRunStepForbidden() *UpdateInstallActionWorkflowRunStepForbidden {
	return &UpdateInstallActionWorkflowRunStepForbidden{}
}

/*
UpdateInstallActionWorkflowRunStepForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateInstallActionWorkflowRunStepForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update install action workflow run step forbidden response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update install action workflow run step forbidden response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step forbidden response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update install action workflow run step forbidden response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update install action workflow run step forbidden response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update install action workflow run step forbidden response
func (o *UpdateInstallActionWorkflowRunStepForbidden) Code() int {
	return 403
}

func (o *UpdateInstallActionWorkflowRunStepForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepForbidden %s", 403, payload)
}

func (o *UpdateInstallActionWorkflowRunStepForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepForbidden %s", 403, payload)
}

func (o *UpdateInstallActionWorkflowRunStepForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstallActionWorkflowRunStepNotFound creates a UpdateInstallActionWorkflowRunStepNotFound with default headers values
func NewUpdateInstallActionWorkflowRunStepNotFound() *UpdateInstallActionWorkflowRunStepNotFound {
	return &UpdateInstallActionWorkflowRunStepNotFound{}
}

/*
UpdateInstallActionWorkflowRunStepNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateInstallActionWorkflowRunStepNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update install action workflow run step not found response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update install action workflow run step not found response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step not found response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update install action workflow run step not found response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update install action workflow run step not found response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update install action workflow run step not found response
func (o *UpdateInstallActionWorkflowRunStepNotFound) Code() int {
	return 404
}

func (o *UpdateInstallActionWorkflowRunStepNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepNotFound %s", 404, payload)
}

func (o *UpdateInstallActionWorkflowRunStepNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepNotFound %s", 404, payload)
}

func (o *UpdateInstallActionWorkflowRunStepNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInstallActionWorkflowRunStepInternalServerError creates a UpdateInstallActionWorkflowRunStepInternalServerError with default headers values
func NewUpdateInstallActionWorkflowRunStepInternalServerError() *UpdateInstallActionWorkflowRunStepInternalServerError {
	return &UpdateInstallActionWorkflowRunStepInternalServerError{}
}

/*
UpdateInstallActionWorkflowRunStepInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateInstallActionWorkflowRunStepInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update install action workflow run step internal server error response has a 2xx status code
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update install action workflow run step internal server error response has a 3xx status code
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update install action workflow run step internal server error response has a 4xx status code
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update install action workflow run step internal server error response has a 5xx status code
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update install action workflow run step internal server error response a status code equal to that given
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update install action workflow run step internal server error response
func (o *UpdateInstallActionWorkflowRunStepInternalServerError) Code() int {
	return 500
}

func (o *UpdateInstallActionWorkflowRunStepInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepInternalServerError %s", 500, payload)
}

func (o *UpdateInstallActionWorkflowRunStepInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/installs/{install_id}/action-workflow-runs/{workflow_run_id}/steps/{step_id}][%d] updateInstallActionWorkflowRunStepInternalServerError %s", 500, payload)
}

func (o *UpdateInstallActionWorkflowRunStepInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateInstallActionWorkflowRunStepInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
