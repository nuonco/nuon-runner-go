// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// CreateRunnerHeartBeatReader is a Reader for the CreateRunnerHeartBeat structure.
type CreateRunnerHeartBeatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRunnerHeartBeatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRunnerHeartBeatCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRunnerHeartBeatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateRunnerHeartBeatUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRunnerHeartBeatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRunnerHeartBeatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRunnerHeartBeatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/runners/{runner_id}/heart-beats] CreateRunnerHeartBeat", response, response.Code())
	}
}

// NewCreateRunnerHeartBeatCreated creates a CreateRunnerHeartBeatCreated with default headers values
func NewCreateRunnerHeartBeatCreated() *CreateRunnerHeartBeatCreated {
	return &CreateRunnerHeartBeatCreated{}
}

/*
CreateRunnerHeartBeatCreated describes a response with status code 201, with default header values.

Created
*/
type CreateRunnerHeartBeatCreated struct {
	Payload *models.AppRunnerHeartBeat
}

// IsSuccess returns true when this create runner heart beat created response has a 2xx status code
func (o *CreateRunnerHeartBeatCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create runner heart beat created response has a 3xx status code
func (o *CreateRunnerHeartBeatCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat created response has a 4xx status code
func (o *CreateRunnerHeartBeatCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create runner heart beat created response has a 5xx status code
func (o *CreateRunnerHeartBeatCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create runner heart beat created response a status code equal to that given
func (o *CreateRunnerHeartBeatCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create runner heart beat created response
func (o *CreateRunnerHeartBeatCreated) Code() int {
	return 201
}

func (o *CreateRunnerHeartBeatCreated) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatCreated  %+v", 201, o.Payload)
}

func (o *CreateRunnerHeartBeatCreated) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatCreated  %+v", 201, o.Payload)
}

func (o *CreateRunnerHeartBeatCreated) GetPayload() *models.AppRunnerHeartBeat {
	return o.Payload
}

func (o *CreateRunnerHeartBeatCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppRunnerHeartBeat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunnerHeartBeatBadRequest creates a CreateRunnerHeartBeatBadRequest with default headers values
func NewCreateRunnerHeartBeatBadRequest() *CreateRunnerHeartBeatBadRequest {
	return &CreateRunnerHeartBeatBadRequest{}
}

/*
CreateRunnerHeartBeatBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateRunnerHeartBeatBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create runner heart beat bad request response has a 2xx status code
func (o *CreateRunnerHeartBeatBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create runner heart beat bad request response has a 3xx status code
func (o *CreateRunnerHeartBeatBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat bad request response has a 4xx status code
func (o *CreateRunnerHeartBeatBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create runner heart beat bad request response has a 5xx status code
func (o *CreateRunnerHeartBeatBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create runner heart beat bad request response a status code equal to that given
func (o *CreateRunnerHeartBeatBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create runner heart beat bad request response
func (o *CreateRunnerHeartBeatBadRequest) Code() int {
	return 400
}

func (o *CreateRunnerHeartBeatBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRunnerHeartBeatBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRunnerHeartBeatBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateRunnerHeartBeatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunnerHeartBeatUnauthorized creates a CreateRunnerHeartBeatUnauthorized with default headers values
func NewCreateRunnerHeartBeatUnauthorized() *CreateRunnerHeartBeatUnauthorized {
	return &CreateRunnerHeartBeatUnauthorized{}
}

/*
CreateRunnerHeartBeatUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateRunnerHeartBeatUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create runner heart beat unauthorized response has a 2xx status code
func (o *CreateRunnerHeartBeatUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create runner heart beat unauthorized response has a 3xx status code
func (o *CreateRunnerHeartBeatUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat unauthorized response has a 4xx status code
func (o *CreateRunnerHeartBeatUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create runner heart beat unauthorized response has a 5xx status code
func (o *CreateRunnerHeartBeatUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create runner heart beat unauthorized response a status code equal to that given
func (o *CreateRunnerHeartBeatUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create runner heart beat unauthorized response
func (o *CreateRunnerHeartBeatUnauthorized) Code() int {
	return 401
}

func (o *CreateRunnerHeartBeatUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRunnerHeartBeatUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRunnerHeartBeatUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateRunnerHeartBeatUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunnerHeartBeatForbidden creates a CreateRunnerHeartBeatForbidden with default headers values
func NewCreateRunnerHeartBeatForbidden() *CreateRunnerHeartBeatForbidden {
	return &CreateRunnerHeartBeatForbidden{}
}

/*
CreateRunnerHeartBeatForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateRunnerHeartBeatForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create runner heart beat forbidden response has a 2xx status code
func (o *CreateRunnerHeartBeatForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create runner heart beat forbidden response has a 3xx status code
func (o *CreateRunnerHeartBeatForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat forbidden response has a 4xx status code
func (o *CreateRunnerHeartBeatForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create runner heart beat forbidden response has a 5xx status code
func (o *CreateRunnerHeartBeatForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create runner heart beat forbidden response a status code equal to that given
func (o *CreateRunnerHeartBeatForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create runner heart beat forbidden response
func (o *CreateRunnerHeartBeatForbidden) Code() int {
	return 403
}

func (o *CreateRunnerHeartBeatForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatForbidden  %+v", 403, o.Payload)
}

func (o *CreateRunnerHeartBeatForbidden) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatForbidden  %+v", 403, o.Payload)
}

func (o *CreateRunnerHeartBeatForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateRunnerHeartBeatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunnerHeartBeatNotFound creates a CreateRunnerHeartBeatNotFound with default headers values
func NewCreateRunnerHeartBeatNotFound() *CreateRunnerHeartBeatNotFound {
	return &CreateRunnerHeartBeatNotFound{}
}

/*
CreateRunnerHeartBeatNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateRunnerHeartBeatNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create runner heart beat not found response has a 2xx status code
func (o *CreateRunnerHeartBeatNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create runner heart beat not found response has a 3xx status code
func (o *CreateRunnerHeartBeatNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat not found response has a 4xx status code
func (o *CreateRunnerHeartBeatNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create runner heart beat not found response has a 5xx status code
func (o *CreateRunnerHeartBeatNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create runner heart beat not found response a status code equal to that given
func (o *CreateRunnerHeartBeatNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create runner heart beat not found response
func (o *CreateRunnerHeartBeatNotFound) Code() int {
	return 404
}

func (o *CreateRunnerHeartBeatNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatNotFound  %+v", 404, o.Payload)
}

func (o *CreateRunnerHeartBeatNotFound) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatNotFound  %+v", 404, o.Payload)
}

func (o *CreateRunnerHeartBeatNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateRunnerHeartBeatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunnerHeartBeatInternalServerError creates a CreateRunnerHeartBeatInternalServerError with default headers values
func NewCreateRunnerHeartBeatInternalServerError() *CreateRunnerHeartBeatInternalServerError {
	return &CreateRunnerHeartBeatInternalServerError{}
}

/*
CreateRunnerHeartBeatInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateRunnerHeartBeatInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this create runner heart beat internal server error response has a 2xx status code
func (o *CreateRunnerHeartBeatInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create runner heart beat internal server error response has a 3xx status code
func (o *CreateRunnerHeartBeatInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create runner heart beat internal server error response has a 4xx status code
func (o *CreateRunnerHeartBeatInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create runner heart beat internal server error response has a 5xx status code
func (o *CreateRunnerHeartBeatInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create runner heart beat internal server error response a status code equal to that given
func (o *CreateRunnerHeartBeatInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create runner heart beat internal server error response
func (o *CreateRunnerHeartBeatInternalServerError) Code() int {
	return 500
}

func (o *CreateRunnerHeartBeatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRunnerHeartBeatInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/runners/{runner_id}/heart-beats][%d] createRunnerHeartBeatInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRunnerHeartBeatInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *CreateRunnerHeartBeatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
