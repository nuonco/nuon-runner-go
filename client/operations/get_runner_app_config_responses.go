// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// GetRunnerAppConfigReader is a Reader for the GetRunnerAppConfig structure.
type GetRunnerAppConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunnerAppConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunnerAppConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunnerAppConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRunnerAppConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRunnerAppConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunnerAppConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunnerAppConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/apps/{app_id}/config/{app_config_id}] GetRunnerAppConfig", response, response.Code())
	}
}

// NewGetRunnerAppConfigOK creates a GetRunnerAppConfigOK with default headers values
func NewGetRunnerAppConfigOK() *GetRunnerAppConfigOK {
	return &GetRunnerAppConfigOK{}
}

/*
GetRunnerAppConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetRunnerAppConfigOK struct {
	Payload *models.AppAppConfig
}

// IsSuccess returns true when this get runner app config o k response has a 2xx status code
func (o *GetRunnerAppConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get runner app config o k response has a 3xx status code
func (o *GetRunnerAppConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config o k response has a 4xx status code
func (o *GetRunnerAppConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner app config o k response has a 5xx status code
func (o *GetRunnerAppConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner app config o k response a status code equal to that given
func (o *GetRunnerAppConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get runner app config o k response
func (o *GetRunnerAppConfigOK) Code() int {
	return 200
}

func (o *GetRunnerAppConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigOK %s", 200, payload)
}

func (o *GetRunnerAppConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigOK %s", 200, payload)
}

func (o *GetRunnerAppConfigOK) GetPayload() *models.AppAppConfig {
	return o.Payload
}

func (o *GetRunnerAppConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppAppConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerAppConfigBadRequest creates a GetRunnerAppConfigBadRequest with default headers values
func NewGetRunnerAppConfigBadRequest() *GetRunnerAppConfigBadRequest {
	return &GetRunnerAppConfigBadRequest{}
}

/*
GetRunnerAppConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunnerAppConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner app config bad request response has a 2xx status code
func (o *GetRunnerAppConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner app config bad request response has a 3xx status code
func (o *GetRunnerAppConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config bad request response has a 4xx status code
func (o *GetRunnerAppConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner app config bad request response has a 5xx status code
func (o *GetRunnerAppConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner app config bad request response a status code equal to that given
func (o *GetRunnerAppConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get runner app config bad request response
func (o *GetRunnerAppConfigBadRequest) Code() int {
	return 400
}

func (o *GetRunnerAppConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigBadRequest %s", 400, payload)
}

func (o *GetRunnerAppConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigBadRequest %s", 400, payload)
}

func (o *GetRunnerAppConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerAppConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerAppConfigUnauthorized creates a GetRunnerAppConfigUnauthorized with default headers values
func NewGetRunnerAppConfigUnauthorized() *GetRunnerAppConfigUnauthorized {
	return &GetRunnerAppConfigUnauthorized{}
}

/*
GetRunnerAppConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRunnerAppConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner app config unauthorized response has a 2xx status code
func (o *GetRunnerAppConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner app config unauthorized response has a 3xx status code
func (o *GetRunnerAppConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config unauthorized response has a 4xx status code
func (o *GetRunnerAppConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner app config unauthorized response has a 5xx status code
func (o *GetRunnerAppConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner app config unauthorized response a status code equal to that given
func (o *GetRunnerAppConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get runner app config unauthorized response
func (o *GetRunnerAppConfigUnauthorized) Code() int {
	return 401
}

func (o *GetRunnerAppConfigUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigUnauthorized %s", 401, payload)
}

func (o *GetRunnerAppConfigUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigUnauthorized %s", 401, payload)
}

func (o *GetRunnerAppConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerAppConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerAppConfigForbidden creates a GetRunnerAppConfigForbidden with default headers values
func NewGetRunnerAppConfigForbidden() *GetRunnerAppConfigForbidden {
	return &GetRunnerAppConfigForbidden{}
}

/*
GetRunnerAppConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRunnerAppConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner app config forbidden response has a 2xx status code
func (o *GetRunnerAppConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner app config forbidden response has a 3xx status code
func (o *GetRunnerAppConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config forbidden response has a 4xx status code
func (o *GetRunnerAppConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner app config forbidden response has a 5xx status code
func (o *GetRunnerAppConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner app config forbidden response a status code equal to that given
func (o *GetRunnerAppConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get runner app config forbidden response
func (o *GetRunnerAppConfigForbidden) Code() int {
	return 403
}

func (o *GetRunnerAppConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigForbidden %s", 403, payload)
}

func (o *GetRunnerAppConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigForbidden %s", 403, payload)
}

func (o *GetRunnerAppConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerAppConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerAppConfigNotFound creates a GetRunnerAppConfigNotFound with default headers values
func NewGetRunnerAppConfigNotFound() *GetRunnerAppConfigNotFound {
	return &GetRunnerAppConfigNotFound{}
}

/*
GetRunnerAppConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunnerAppConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner app config not found response has a 2xx status code
func (o *GetRunnerAppConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner app config not found response has a 3xx status code
func (o *GetRunnerAppConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config not found response has a 4xx status code
func (o *GetRunnerAppConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get runner app config not found response has a 5xx status code
func (o *GetRunnerAppConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get runner app config not found response a status code equal to that given
func (o *GetRunnerAppConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get runner app config not found response
func (o *GetRunnerAppConfigNotFound) Code() int {
	return 404
}

func (o *GetRunnerAppConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigNotFound %s", 404, payload)
}

func (o *GetRunnerAppConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigNotFound %s", 404, payload)
}

func (o *GetRunnerAppConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerAppConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunnerAppConfigInternalServerError creates a GetRunnerAppConfigInternalServerError with default headers values
func NewGetRunnerAppConfigInternalServerError() *GetRunnerAppConfigInternalServerError {
	return &GetRunnerAppConfigInternalServerError{}
}

/*
GetRunnerAppConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunnerAppConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get runner app config internal server error response has a 2xx status code
func (o *GetRunnerAppConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get runner app config internal server error response has a 3xx status code
func (o *GetRunnerAppConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get runner app config internal server error response has a 4xx status code
func (o *GetRunnerAppConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get runner app config internal server error response has a 5xx status code
func (o *GetRunnerAppConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get runner app config internal server error response a status code equal to that given
func (o *GetRunnerAppConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get runner app config internal server error response
func (o *GetRunnerAppConfigInternalServerError) Code() int {
	return 500
}

func (o *GetRunnerAppConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigInternalServerError %s", 500, payload)
}

func (o *GetRunnerAppConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/apps/{app_id}/config/{app_config_id}][%d] getRunnerAppConfigInternalServerError %s", 500, payload)
}

func (o *GetRunnerAppConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetRunnerAppConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
