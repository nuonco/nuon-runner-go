// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// UpdateTerraformStateJSONReader is a Reader for the UpdateTerraformStateJSON structure.
type UpdateTerraformStateJSONReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTerraformStateJSONReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTerraformStateJSONOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTerraformStateJSONBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTerraformStateJSONUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTerraformStateJSONForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTerraformStateJSONNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateTerraformStateJSONInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/terraform-workspaces/{workspace_id}/state-json] UpdateTerraformStateJSON", response, response.Code())
	}
}

// NewUpdateTerraformStateJSONOK creates a UpdateTerraformStateJSONOK with default headers values
func NewUpdateTerraformStateJSONOK() *UpdateTerraformStateJSONOK {
	return &UpdateTerraformStateJSONOK{}
}

/*
UpdateTerraformStateJSONOK describes a response with status code 200, with default header values.

OK
*/
type UpdateTerraformStateJSONOK struct {
	Payload interface{}
}

// IsSuccess returns true when this update terraform state Json o k response has a 2xx status code
func (o *UpdateTerraformStateJSONOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update terraform state Json o k response has a 3xx status code
func (o *UpdateTerraformStateJSONOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json o k response has a 4xx status code
func (o *UpdateTerraformStateJSONOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update terraform state Json o k response has a 5xx status code
func (o *UpdateTerraformStateJSONOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state Json o k response a status code equal to that given
func (o *UpdateTerraformStateJSONOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update terraform state Json o k response
func (o *UpdateTerraformStateJSONOK) Code() int {
	return 200
}

func (o *UpdateTerraformStateJSONOK) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonOK  %+v", 200, o.Payload)
}

func (o *UpdateTerraformStateJSONOK) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonOK  %+v", 200, o.Payload)
}

func (o *UpdateTerraformStateJSONOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateTerraformStateJSONOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateJSONBadRequest creates a UpdateTerraformStateJSONBadRequest with default headers values
func NewUpdateTerraformStateJSONBadRequest() *UpdateTerraformStateJSONBadRequest {
	return &UpdateTerraformStateJSONBadRequest{}
}

/*
UpdateTerraformStateJSONBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateTerraformStateJSONBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state Json bad request response has a 2xx status code
func (o *UpdateTerraformStateJSONBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state Json bad request response has a 3xx status code
func (o *UpdateTerraformStateJSONBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json bad request response has a 4xx status code
func (o *UpdateTerraformStateJSONBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state Json bad request response has a 5xx status code
func (o *UpdateTerraformStateJSONBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state Json bad request response a status code equal to that given
func (o *UpdateTerraformStateJSONBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update terraform state Json bad request response
func (o *UpdateTerraformStateJSONBadRequest) Code() int {
	return 400
}

func (o *UpdateTerraformStateJSONBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTerraformStateJSONBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTerraformStateJSONBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateJSONBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateJSONUnauthorized creates a UpdateTerraformStateJSONUnauthorized with default headers values
func NewUpdateTerraformStateJSONUnauthorized() *UpdateTerraformStateJSONUnauthorized {
	return &UpdateTerraformStateJSONUnauthorized{}
}

/*
UpdateTerraformStateJSONUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateTerraformStateJSONUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state Json unauthorized response has a 2xx status code
func (o *UpdateTerraformStateJSONUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state Json unauthorized response has a 3xx status code
func (o *UpdateTerraformStateJSONUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json unauthorized response has a 4xx status code
func (o *UpdateTerraformStateJSONUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state Json unauthorized response has a 5xx status code
func (o *UpdateTerraformStateJSONUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state Json unauthorized response a status code equal to that given
func (o *UpdateTerraformStateJSONUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update terraform state Json unauthorized response
func (o *UpdateTerraformStateJSONUnauthorized) Code() int {
	return 401
}

func (o *UpdateTerraformStateJSONUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTerraformStateJSONUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTerraformStateJSONUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateJSONUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateJSONForbidden creates a UpdateTerraformStateJSONForbidden with default headers values
func NewUpdateTerraformStateJSONForbidden() *UpdateTerraformStateJSONForbidden {
	return &UpdateTerraformStateJSONForbidden{}
}

/*
UpdateTerraformStateJSONForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateTerraformStateJSONForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state Json forbidden response has a 2xx status code
func (o *UpdateTerraformStateJSONForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state Json forbidden response has a 3xx status code
func (o *UpdateTerraformStateJSONForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json forbidden response has a 4xx status code
func (o *UpdateTerraformStateJSONForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state Json forbidden response has a 5xx status code
func (o *UpdateTerraformStateJSONForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state Json forbidden response a status code equal to that given
func (o *UpdateTerraformStateJSONForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update terraform state Json forbidden response
func (o *UpdateTerraformStateJSONForbidden) Code() int {
	return 403
}

func (o *UpdateTerraformStateJSONForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTerraformStateJSONForbidden) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTerraformStateJSONForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateJSONForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateJSONNotFound creates a UpdateTerraformStateJSONNotFound with default headers values
func NewUpdateTerraformStateJSONNotFound() *UpdateTerraformStateJSONNotFound {
	return &UpdateTerraformStateJSONNotFound{}
}

/*
UpdateTerraformStateJSONNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateTerraformStateJSONNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state Json not found response has a 2xx status code
func (o *UpdateTerraformStateJSONNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state Json not found response has a 3xx status code
func (o *UpdateTerraformStateJSONNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json not found response has a 4xx status code
func (o *UpdateTerraformStateJSONNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update terraform state Json not found response has a 5xx status code
func (o *UpdateTerraformStateJSONNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update terraform state Json not found response a status code equal to that given
func (o *UpdateTerraformStateJSONNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update terraform state Json not found response
func (o *UpdateTerraformStateJSONNotFound) Code() int {
	return 404
}

func (o *UpdateTerraformStateJSONNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTerraformStateJSONNotFound) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTerraformStateJSONNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateJSONNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformStateJSONInternalServerError creates a UpdateTerraformStateJSONInternalServerError with default headers values
func NewUpdateTerraformStateJSONInternalServerError() *UpdateTerraformStateJSONInternalServerError {
	return &UpdateTerraformStateJSONInternalServerError{}
}

/*
UpdateTerraformStateJSONInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateTerraformStateJSONInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this update terraform state Json internal server error response has a 2xx status code
func (o *UpdateTerraformStateJSONInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update terraform state Json internal server error response has a 3xx status code
func (o *UpdateTerraformStateJSONInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update terraform state Json internal server error response has a 4xx status code
func (o *UpdateTerraformStateJSONInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update terraform state Json internal server error response has a 5xx status code
func (o *UpdateTerraformStateJSONInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update terraform state Json internal server error response a status code equal to that given
func (o *UpdateTerraformStateJSONInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update terraform state Json internal server error response
func (o *UpdateTerraformStateJSONInternalServerError) Code() int {
	return 500
}

func (o *UpdateTerraformStateJSONInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateTerraformStateJSONInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/terraform-workspaces/{workspace_id}/state-json][%d] updateTerraformStateJsonInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateTerraformStateJSONInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *UpdateTerraformStateJSONInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
