// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// GetInstallComponenetLastActivePlanReader is a Reader for the GetInstallComponenetLastActivePlan structure.
type GetInstallComponenetLastActivePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallComponenetLastActivePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallComponenetLastActivePlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallComponenetLastActivePlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallComponenetLastActivePlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallComponenetLastActivePlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallComponenetLastActivePlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallComponenetLastActivePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/{component_id}/last-active-plan] GetInstallComponenetLastActivePlan", response, response.Code())
	}
}

// NewGetInstallComponenetLastActivePlanOK creates a GetInstallComponenetLastActivePlanOK with default headers values
func NewGetInstallComponenetLastActivePlanOK() *GetInstallComponenetLastActivePlanOK {
	return &GetInstallComponenetLastActivePlanOK{}
}

/*
GetInstallComponenetLastActivePlanOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallComponenetLastActivePlanOK struct {
	Payload *models.ServiceGetInstallComponenetLastActivePlanResponse
}

// IsSuccess returns true when this get install componenet last active plan o k response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install componenet last active plan o k response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan o k response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install componenet last active plan o k response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install componenet last active plan o k response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install componenet last active plan o k response
func (o *GetInstallComponenetLastActivePlanOK) Code() int {
	return 200
}

func (o *GetInstallComponenetLastActivePlanOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanOK) GetPayload() *models.ServiceGetInstallComponenetLastActivePlanResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceGetInstallComponenetLastActivePlanResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponenetLastActivePlanBadRequest creates a GetInstallComponenetLastActivePlanBadRequest with default headers values
func NewGetInstallComponenetLastActivePlanBadRequest() *GetInstallComponenetLastActivePlanBadRequest {
	return &GetInstallComponenetLastActivePlanBadRequest{}
}

/*
GetInstallComponenetLastActivePlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallComponenetLastActivePlanBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install componenet last active plan bad request response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install componenet last active plan bad request response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan bad request response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install componenet last active plan bad request response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install componenet last active plan bad request response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install componenet last active plan bad request response
func (o *GetInstallComponenetLastActivePlanBadRequest) Code() int {
	return 400
}

func (o *GetInstallComponenetLastActivePlanBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponenetLastActivePlanUnauthorized creates a GetInstallComponenetLastActivePlanUnauthorized with default headers values
func NewGetInstallComponenetLastActivePlanUnauthorized() *GetInstallComponenetLastActivePlanUnauthorized {
	return &GetInstallComponenetLastActivePlanUnauthorized{}
}

/*
GetInstallComponenetLastActivePlanUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallComponenetLastActivePlanUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install componenet last active plan unauthorized response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install componenet last active plan unauthorized response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan unauthorized response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install componenet last active plan unauthorized response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install componenet last active plan unauthorized response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install componenet last active plan unauthorized response
func (o *GetInstallComponenetLastActivePlanUnauthorized) Code() int {
	return 401
}

func (o *GetInstallComponenetLastActivePlanUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponenetLastActivePlanForbidden creates a GetInstallComponenetLastActivePlanForbidden with default headers values
func NewGetInstallComponenetLastActivePlanForbidden() *GetInstallComponenetLastActivePlanForbidden {
	return &GetInstallComponenetLastActivePlanForbidden{}
}

/*
GetInstallComponenetLastActivePlanForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallComponenetLastActivePlanForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install componenet last active plan forbidden response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install componenet last active plan forbidden response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan forbidden response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install componenet last active plan forbidden response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install componenet last active plan forbidden response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install componenet last active plan forbidden response
func (o *GetInstallComponenetLastActivePlanForbidden) Code() int {
	return 403
}

func (o *GetInstallComponenetLastActivePlanForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponenetLastActivePlanNotFound creates a GetInstallComponenetLastActivePlanNotFound with default headers values
func NewGetInstallComponenetLastActivePlanNotFound() *GetInstallComponenetLastActivePlanNotFound {
	return &GetInstallComponenetLastActivePlanNotFound{}
}

/*
GetInstallComponenetLastActivePlanNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallComponenetLastActivePlanNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install componenet last active plan not found response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install componenet last active plan not found response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan not found response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install componenet last active plan not found response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install componenet last active plan not found response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install componenet last active plan not found response
func (o *GetInstallComponenetLastActivePlanNotFound) Code() int {
	return 404
}

func (o *GetInstallComponenetLastActivePlanNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponenetLastActivePlanInternalServerError creates a GetInstallComponenetLastActivePlanInternalServerError with default headers values
func NewGetInstallComponenetLastActivePlanInternalServerError() *GetInstallComponenetLastActivePlanInternalServerError {
	return &GetInstallComponenetLastActivePlanInternalServerError{}
}

/*
GetInstallComponenetLastActivePlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallComponenetLastActivePlanInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install componenet last active plan internal server error response has a 2xx status code
func (o *GetInstallComponenetLastActivePlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install componenet last active plan internal server error response has a 3xx status code
func (o *GetInstallComponenetLastActivePlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install componenet last active plan internal server error response has a 4xx status code
func (o *GetInstallComponenetLastActivePlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install componenet last active plan internal server error response has a 5xx status code
func (o *GetInstallComponenetLastActivePlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install componenet last active plan internal server error response a status code equal to that given
func (o *GetInstallComponenetLastActivePlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install componenet last active plan internal server error response
func (o *GetInstallComponenetLastActivePlanInternalServerError) Code() int {
	return 500
}

func (o *GetInstallComponenetLastActivePlanInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/last-active-plan][%d] getInstallComponenetLastActivePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponenetLastActivePlanInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponenetLastActivePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
