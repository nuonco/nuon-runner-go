// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/nuonco/nuon-runner-go/models"
)

// GetInstallComponentPreviousConfigReader is a Reader for the GetInstallComponentPreviousConfig structure.
type GetInstallComponentPreviousConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallComponentPreviousConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallComponentPreviousConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInstallComponentPreviousConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInstallComponentPreviousConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallComponentPreviousConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallComponentPreviousConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallComponentPreviousConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/installs/{install_id}/{component_id}/previous-config] GetInstallComponentPreviousConfig", response, response.Code())
	}
}

// NewGetInstallComponentPreviousConfigOK creates a GetInstallComponentPreviousConfigOK with default headers values
func NewGetInstallComponentPreviousConfigOK() *GetInstallComponentPreviousConfigOK {
	return &GetInstallComponentPreviousConfigOK{}
}

/*
GetInstallComponentPreviousConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetInstallComponentPreviousConfigOK struct {
	Payload *models.ServiceGetInstallComponentPreviousConfigResponse
}

// IsSuccess returns true when this get install component previous config o k response has a 2xx status code
func (o *GetInstallComponentPreviousConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install component previous config o k response has a 3xx status code
func (o *GetInstallComponentPreviousConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config o k response has a 4xx status code
func (o *GetInstallComponentPreviousConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component previous config o k response has a 5xx status code
func (o *GetInstallComponentPreviousConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component previous config o k response a status code equal to that given
func (o *GetInstallComponentPreviousConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install component previous config o k response
func (o *GetInstallComponentPreviousConfigOK) Code() int {
	return 200
}

func (o *GetInstallComponentPreviousConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponentPreviousConfigOK) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigOK  %+v", 200, o.Payload)
}

func (o *GetInstallComponentPreviousConfigOK) GetPayload() *models.ServiceGetInstallComponentPreviousConfigResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceGetInstallComponentPreviousConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentPreviousConfigBadRequest creates a GetInstallComponentPreviousConfigBadRequest with default headers values
func NewGetInstallComponentPreviousConfigBadRequest() *GetInstallComponentPreviousConfigBadRequest {
	return &GetInstallComponentPreviousConfigBadRequest{}
}

/*
GetInstallComponentPreviousConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetInstallComponentPreviousConfigBadRequest struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component previous config bad request response has a 2xx status code
func (o *GetInstallComponentPreviousConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component previous config bad request response has a 3xx status code
func (o *GetInstallComponentPreviousConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config bad request response has a 4xx status code
func (o *GetInstallComponentPreviousConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component previous config bad request response has a 5xx status code
func (o *GetInstallComponentPreviousConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component previous config bad request response a status code equal to that given
func (o *GetInstallComponentPreviousConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get install component previous config bad request response
func (o *GetInstallComponentPreviousConfigBadRequest) Code() int {
	return 400
}

func (o *GetInstallComponentPreviousConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponentPreviousConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstallComponentPreviousConfigBadRequest) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentPreviousConfigUnauthorized creates a GetInstallComponentPreviousConfigUnauthorized with default headers values
func NewGetInstallComponentPreviousConfigUnauthorized() *GetInstallComponentPreviousConfigUnauthorized {
	return &GetInstallComponentPreviousConfigUnauthorized{}
}

/*
GetInstallComponentPreviousConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInstallComponentPreviousConfigUnauthorized struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component previous config unauthorized response has a 2xx status code
func (o *GetInstallComponentPreviousConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component previous config unauthorized response has a 3xx status code
func (o *GetInstallComponentPreviousConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config unauthorized response has a 4xx status code
func (o *GetInstallComponentPreviousConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component previous config unauthorized response has a 5xx status code
func (o *GetInstallComponentPreviousConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component previous config unauthorized response a status code equal to that given
func (o *GetInstallComponentPreviousConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install component previous config unauthorized response
func (o *GetInstallComponentPreviousConfigUnauthorized) Code() int {
	return 401
}

func (o *GetInstallComponentPreviousConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponentPreviousConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstallComponentPreviousConfigUnauthorized) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentPreviousConfigForbidden creates a GetInstallComponentPreviousConfigForbidden with default headers values
func NewGetInstallComponentPreviousConfigForbidden() *GetInstallComponentPreviousConfigForbidden {
	return &GetInstallComponentPreviousConfigForbidden{}
}

/*
GetInstallComponentPreviousConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInstallComponentPreviousConfigForbidden struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component previous config forbidden response has a 2xx status code
func (o *GetInstallComponentPreviousConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component previous config forbidden response has a 3xx status code
func (o *GetInstallComponentPreviousConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config forbidden response has a 4xx status code
func (o *GetInstallComponentPreviousConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component previous config forbidden response has a 5xx status code
func (o *GetInstallComponentPreviousConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component previous config forbidden response a status code equal to that given
func (o *GetInstallComponentPreviousConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install component previous config forbidden response
func (o *GetInstallComponentPreviousConfigForbidden) Code() int {
	return 403
}

func (o *GetInstallComponentPreviousConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponentPreviousConfigForbidden) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallComponentPreviousConfigForbidden) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentPreviousConfigNotFound creates a GetInstallComponentPreviousConfigNotFound with default headers values
func NewGetInstallComponentPreviousConfigNotFound() *GetInstallComponentPreviousConfigNotFound {
	return &GetInstallComponentPreviousConfigNotFound{}
}

/*
GetInstallComponentPreviousConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInstallComponentPreviousConfigNotFound struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component previous config not found response has a 2xx status code
func (o *GetInstallComponentPreviousConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component previous config not found response has a 3xx status code
func (o *GetInstallComponentPreviousConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config not found response has a 4xx status code
func (o *GetInstallComponentPreviousConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install component previous config not found response has a 5xx status code
func (o *GetInstallComponentPreviousConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install component previous config not found response a status code equal to that given
func (o *GetInstallComponentPreviousConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install component previous config not found response
func (o *GetInstallComponentPreviousConfigNotFound) Code() int {
	return 404
}

func (o *GetInstallComponentPreviousConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponentPreviousConfigNotFound) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallComponentPreviousConfigNotFound) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallComponentPreviousConfigInternalServerError creates a GetInstallComponentPreviousConfigInternalServerError with default headers values
func NewGetInstallComponentPreviousConfigInternalServerError() *GetInstallComponentPreviousConfigInternalServerError {
	return &GetInstallComponentPreviousConfigInternalServerError{}
}

/*
GetInstallComponentPreviousConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetInstallComponentPreviousConfigInternalServerError struct {
	Payload *models.StderrErrResponse
}

// IsSuccess returns true when this get install component previous config internal server error response has a 2xx status code
func (o *GetInstallComponentPreviousConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install component previous config internal server error response has a 3xx status code
func (o *GetInstallComponentPreviousConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install component previous config internal server error response has a 4xx status code
func (o *GetInstallComponentPreviousConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install component previous config internal server error response has a 5xx status code
func (o *GetInstallComponentPreviousConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install component previous config internal server error response a status code equal to that given
func (o *GetInstallComponentPreviousConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install component previous config internal server error response
func (o *GetInstallComponentPreviousConfigInternalServerError) Code() int {
	return 500
}

func (o *GetInstallComponentPreviousConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponentPreviousConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/installs/{install_id}/{component_id}/previous-config][%d] getInstallComponentPreviousConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallComponentPreviousConfigInternalServerError) GetPayload() *models.StderrErrResponse {
	return o.Payload
}

func (o *GetInstallComponentPreviousConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StderrErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
